{"name":"WP Base Theme ","tagline":"Used to simplify the development process.","body":"# Table of Contents\r\n\r\n* [WP Base Theme Description] (https://github.com/gicolek/WP-Base-Theme#wp-base-theme-description)\r\n* [Using config.php file] (https://github.com/gicolek/WP-Base-Theme#using-configphp-file)\r\n* [Scripts] (https://github.com/gicolek/WP-Base-Theme#scripts)\r\n* [Theme Options] (https://github.com/gicolek/WP-Base-Theme#theme-options)\r\n* [Custom Post Types Creation] (https://github.com/gicolek/WP-Base-Theme#custom-post-types-creation)\r\n* [Custom Taxonomies Creation] (https://github.com/gicolek/WP-Base-Theme#custom-taxonomies-creation)\r\n* [Auto Sidebar Registration] (https://github.com/gicolek/WP-Base-Theme#auto-sidebar-registration)\r\n* [Navigation Menus Registration] (https://github.com/gicolek/WP-Base-Theme#navigation-menus-registration)\r\n* [Content Filling] (https://github.com/gicolek/WP-Base-Theme#content-filling)\r\n* [Adding Image Sizes] (https://github.com/gicolek/WP-Base-Theme#adding-image-sizes)\r\n* [File\tInclusions] (https://github.com/gicolek/WP-Base-Theme#file-inclusions)\r\n* [Shortcodes] (https://github.com/gicolek/WP-Base-Theme#shortcodes)\r\n* [License] (https://github.com/gicolek/WP-Base-Theme#license)\r\n\r\n# WP Base Theme Description\r\n\r\nWP Base Theme is a simple Framework being written to simplify the creation of WordPress powered Themes,\r\nhandling some functionality semi-automatically.\r\n\r\nIt doesn't include any kind of HTML or CSS. This is solely\r\na PHP project. I wanted to provide a good base for developers, reducing the amount of markup removal.\r\n\r\nThe main idea is to run everything from a single destination, provided a config array.\r\n\r\n> (actually this is Weston Ruter's idea, see https://github.com/westonruter)\r\n> but I incorporated it in my own way, having seen the same among different \r\n> repos here and there :))\r\n\r\nMoreover it contains most common files that are usually included\r\nin most projects involving WP.\r\n\r\nThe main thing is the base-config directory in which there are two important files:\r\n\r\n* base_theme_config.php\r\n* config.php\r\n\r\nThe former is a PHP class responsible for automatic handling of provided configuration\r\nThe latter is the configuration array of config files, which has the following form:\r\n\r\n```php\r\n<?php\r\n\r\nreturn array(\r\n\t'key1' => array(\r\n\t),\r\n\t'key2' => array(\r\n\t),\r\n\t'key3' => array(\r\n\t),\r\n\t// etc.\r\n);\r\n\r\n```\r\n\r\n# Using config.php file\r\n\r\n*__Full, sample config file can be found within the theme's root directory.__*\r\n\r\nCurrently there are automatic handlers for:\r\n\r\n* scripts\r\n* theme options\r\n* custom post types creation\r\n* auto sidebar registration\r\n* navigation menus registration\r\n* content filling\r\n* adding image sizes\r\n* file inclusions (so that it'd be easy to find out what files were loaded and easily turn them of \r\nto debug the code)\r\n\r\n## Scripts\r\n\r\nWordPress will auto load scripts based on the config array, starting with scripts key.\r\n**These should reside within _ui/js/ directory** (Base Theme will throw an error in case\r\nthe file didn't exist)\r\n\r\n```php\r\n'scripts' => array(\r\n\t\t'main' => array(\r\n\t\t\t'handle' => 'main',\r\n\t\t\t'file' => 'main.js',\r\n\t\t\t'enqueue' => true,\r\n\t\t\t'deps' => array(\r\n\t\t\t\t'jquery',\r\n\t\t\t),\r\n \t\t),\r\n\t),\r\n```\r\nThe above would include and enqueue main.js, giving it main handle.\r\n\r\nSince no in_footer parameter was specified it would get loaded in the footer by default\r\nWhy? http://stackoverflow.com/questions/5329807/benefits-of-loading-js-at-the-bottom-as-opposed-to-the-top-of-the-document\r\n\r\n## Theme Options\r\n\r\nBase Theme supports semi-automatic of Appearance -> Theme Options page, for example\r\n\r\n```php\r\n'settings' => array(\r\n\t\t'opt1' => array(\r\n\t\t\t'type' => 'text',\r\n\t\t\t'name' => 'input-text-1',\r\n\t\t\t'desc' => 'Input type text test',\r\n\t\t),\r\n\t\t'opt2' => array(\r\n\t\t\t'type' => 'text',\r\n\t\t\t'name' => 'input-text-2',\r\n\t\t\t'desc' => 'Input type text test 2',\r\n\t\t),\r\n\t\t'opt3' => array(\r\n\t\t\t'type' => 'dropdown_pages',\r\n\t\t\t'name' => 'dropdown-pages',\r\n\t\t\t'desc' => 'Testing dropdown pages',\r\n\t\t),\r\n\t\t'opt4' => array(\r\n\t\t\t'type' => 'wp_editor',\r\n\t\t\t'name' => 'wp-editor',\r\n\t\t\t'desc' => 'Testing WP Editor',\r\n\t\t)\r\n\t),\r\n```\r\nWould create 4 options:\r\n\r\n* 2 input text fields\r\n* 1 dropdown pages field\r\n* 1 wp editor field\r\n\r\nIn case custom Theme Options were to be added Base Theme Supports custom callback functionality, for example:\r\n\r\n```php\r\n'settings' => array(\r\n\t\t'custom' => array(\r\n\t\t\t'generate_field_callback' => 'custom_generate_field',\r\n\t\t\t'validate_field_callback' => 'custom_validate_field',\r\n\t\t\t'name' => 'custom',\r\n\t\t\t'desc' => 'Custom Field with callback functions',\r\n\t\t),\r\n),\r\n```\r\nWhere custom callback functions could be of the following form:\r\n\r\n```php \r\nfunction custom_generate_field() {\r\n\t$options = get_option( 'base_options' );\r\n\tif ( !empty( $options['custom'] ) ) {\r\n\t\techo \"<input id='custom' name='base_options[custom]' size='80' type='text' value='{$options['custom']}' />\";\r\n\t}\r\n\telse\r\n\t\techo \"<input id='custom' name='base_options[custom]' size='80' type='text' value='' />\";\r\n}\r\n\r\nfunction custom_validate_field($input) {\r\n\t$valid = $input['custom'];\r\n\treturn $valid;\r\n}\r\n```\r\nThey could be placed in an included file or at the bottom of the config.php.\r\n\r\n## Custom Post Types Creation\r\n\r\nBase Theme can also handle auto posts creation, for example:\r\n\r\n```php\r\n'post_types' => array(\r\n\t\t'base_slider' => array(\r\n\t\t\t'labels' => array(\r\n\t\t\t\t'singular' => 'Slider',\r\n\t\t\t\t'plural' => 'Slider entries',\r\n\t\t\t),\r\n\t\t\t'args' => array(\r\n\t\t\t\t'supports' => array( 'title', 'editor', 'author', 'custom-fields', 'thumbnail', 'excerpt' ),\r\n\t\t\t),\r\n\t\t),\r\n\t),\r\n```\r\n\r\nWould create a slider post type supporting title, editor, author, custom-fields and a thumbnail\r\n\r\nNote: This shortcut makes usage of http://codex.wordpress.org/Function_Reference/register_post_type\r\n\r\nNote: it is wise to always prefix CPT with some word, like base above\r\n\r\n## Custom Taxonomies Creation\r\n\r\nBase Theme facilitates creation of custom taxonomies\r\n\r\n```php\r\n 'tax' => array(\r\n\t\t// taxonomy like category\r\n\t\t'wp-base-tax' => array(\r\n\t\t\t'singular' => 'WP Base Tax',\r\n\t\t\t'plural' => 'WP Base Taxes',\r\n\t\t\t'rewrite' => array( 'slug' => 'wp-base-tax', 'with_front' => false ),\r\n\t\t\t'posts' => array( 'slider' ), \r\n\t\t),\r\n\t\t// taxonomy like tag\r\n\t\t'wp-base-tag' => array(\r\n\t\t\t'singular' => 'WP Base Tag',\r\n\t\t\t'plural' => 'WP Base Tags',\r\n\t\t\t'rewrite' => array( 'slug' => 'wp-base-tag', 'with_front' => false ),\r\n\t\t\t'posts' => array( 'base_slider' ),\r\n\t\t\t'hierarchical' => false,\r\n\t\t),\r\n\t),\r\n```\r\nWould create two new taxonomies: one hierarhical like category and the other one non hierarchical\r\nlike tag, both of these would be assigned to the base_slider post type:\r\n\r\nNote: This shortcut makes usage of: http://codex.wordpress.org/Function_Reference/register_taxonomy\r\n\r\n## Auto Sidebar Registration\r\n\r\nProvided config values of the following form:\r\n\r\n```php\r\n'sidebars' => array(\r\n\t\t'sidebar-1' => array( ),\r\n\t\t'sidebar-2' => array(\r\n\t\t\t'name' =>  __( \"Sidebar Rafal\", WP_BASE_DOMAIN ),\r\n\t\t\t'id' => \"sidebar-rafal\",\r\n\t\t),\r\n\t),\r\n```\r\nTwo sidebars will be created:\r\n\r\n- sidebar-1 with default values, that is:\r\n\r\n```php\r\n\t\t'name' => __( 'Sidebar', 'wpized_light' ),\r\n\t\t'id' => 'sidebar-1',\r\n\t\t'before_widget' => '<section id=\"%1$s\"class=\"sidebar-widget-menu %2$s\">',\r\n\t\t'after_widget' => \"</section>\",\r\n\t\t'before_title' => '<h3>',\r\n\t\t'after_title' => '</h3>',\r\n```\r\n\r\n- sidebar-2 with custom name and id arguments.\r\n\r\nThis approach provides some flexibility and allows simple sidebar creation, without\r\nthe need of code repetition.\r\n\r\n## Navigation Menus Registration\r\n\r\nExample:\r\n\r\n```php\r\n'nav-menus' => array(\r\n\t\t'navigation-top' => __( 'Top Navigation Menu' ),\r\n\t\t'navigation-foot' => __( 'Footer Navigation Menu' ),\r\n\t)\r\n```\r\n\r\nIn the same way as above navigation menus can be created. WP Base Theme is making \r\nusage of WP built in register_nav_menus() method. It's just here to provide functionality\r\nfrom one place\r\n\r\n## Content Filling\r\n\r\nIn case any content was to be added, the 'posts' key should be added to the config array.\r\nIt should contain an array of arrays (with post types (post, page, etc.) as each array's key)\r\nEach such post would then contain arguments similar to: http://codex.wordpress.org/Function_Reference/register_post_type\r\nTag / Category addition is based on their names in the background\r\n\r\n## Adding Image Sizes\r\n\r\nSpecyfing the 'image' key will enable post thumbnails and also add\r\nspecific image sizes making usage of the http://codex.wordpress.org/Function_Reference/add_image_size\r\n\r\n## File Inclusions\r\n\r\nIn case any extra files were supposed to be added, with some custom functionality\r\nthis can be done via \r\n\r\n```php\r\n'includes' => array(\r\n\t\t'shortcodes' => true,\r\n\t),\r\n```\r\n\r\nBase Theme would include the shortcodes.php file from the **includes** directory.\r\n\r\n## Shortcodes\r\n\r\nFor sake of popularity of shortcodes I've added sample shortcodes.php\r\nfile to the /includes directory, which gets loaded by default. \r\n\r\nSee its contents to find the working examples.\r\n\r\n# License\r\n\r\nWP Base Theme is licensed under the GPL v2 or later.\r\n\r\n> This program is free software; you can redistribute it and/or modify\r\nit under the terms of the GNU General Public License, version 2, as \r\npublished by the Free Software Foundation.\r\n\r\n> This program is distributed in the hope that it will be useful,\r\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\r\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\nGNU General Public License for more details.\r\n\r\n> You should have received a copy of the GNU General Public License\r\nalong with this program; if not, write to the Free Software\r\nFoundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\r\n","google":"UA-12115239","note":"Don't delete this file! It's used internally to help with page regeneration."}